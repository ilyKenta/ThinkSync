name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22.x'

    - name: Install backend dependencies
      working-directory: ./backend/ThinkSync-backend-API
      run: npm install

    - name: Run backend tests
      working-directory: ./backend/ThinkSync-backend-API
      run: echo "No tests available yet"

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22.x'

    - name: Install backend dependencies
      working-directory: ./backend/ThinkSync-backend-API
      run: npm install

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'thinksyncapi'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './backend/ThinkSync-backend-API'

  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'

    - name: Check Node.js and npm versions
      run: |
        node --version
        npm --version
        pwd
        ls -la

    - name: Check frontend directory
      working-directory: ./frontend
      run: |
        pwd
        ls -la
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        npm cache clean --force
        npm install

    - name: Build frontend
      working-directory: ./frontend
      run: |
        echo "Starting build process..."
        npm run build
      env:
        NEXT_PUBLIC_API_URL: 'https://thinksyncapi.azurewebsites.net'
        NEXT_PUBLIC_AZURE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_AZURE_CLIENT_ID }}
        NEXT_PUBLIC_AZURE_TENANT_ID: ${{ secrets.NEXT_PUBLIC_AZURE_TENANT_ID }}
        CI: false # This prevents treating warnings as errors

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "frontend"
        output_location: ".next"
        skip_app_build: true
        production_branch: "main" 