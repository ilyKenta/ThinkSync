name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22.x'

    - name: Install backend dependencies
      working-directory: ./backend/ThinkSync-backend-API
      run: npm install

    - name: Run backend tests
      working-directory: ./backend/ThinkSync-backend-API
      run: echo "No tests available yet"

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22.x'

    - name: Install backend dependencies
      working-directory: ./backend/ThinkSync-backend-API
      run: npm install

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'thinksyncapi'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

  # build-frontend:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '14'

  #   - name: Install frontend dependencies
  #     working-directory: ./frontend
  #     run: npm install

  #   - name: Build frontend
  #     working-directory: ./frontend
  #     run: npm run build

  #   - name: Run frontend tests
  #     working-directory: ./frontend
  #     run: echo "No tests available yet"

  # deploy-frontend:
  #   runs-on: ubuntu-latest
  #   needs: build-frontend

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Deploy to Azure Static Web Apps
  #     uses: Azure/static-web-apps-deploy@v1
  #     with:
  #       azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
  #       action: 'upload'
  #       app_location: './frontend'
  #       output_location: './frontend/build' 